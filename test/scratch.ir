; ModuleID = 'module'
source_filename = "module"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%Variable = type { ptr, ptr }
%Value.String = type { i8, ptr }
%Value.Int = type { i8, i64 }
%Value.Unknown = type { i8, ptr }

@a = internal global %Variable zeroinitializer
@b = internal global %Variable zeroinitializer

declare i32 @printf(ptr %0, ...)

declare ptr @malloc(i32 %0)

define common void @main() {
entry:
  %0 = call ptr @malloc(i32 4)
  store [4 x i8] c"nvm\00", ptr %0, align 1
  %1 = call ptr @malloc(i32 16)
  %2 = bitcast ptr %1 to ptr
  store i8 3, ptr %2, align 1
  %3 = getelementptr %Value.String, ptr %1, i32 0, i32 1
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr getelementptr inbounds (%Variable, ptr @a, i32 0, i32 1), align 8
  %4 = call ptr @malloc(i32 12)
  %5 = bitcast ptr %4 to ptr
  store i8 1, ptr %5, align 1
  %6 = getelementptr %Value.Int, ptr %4, i32 0, i32 1
  store i64 4, ptr %6, align 4
  store ptr %4, ptr getelementptr inbounds (%Variable, ptr @b, i32 0, i32 1), align 8
  %7 = load ptr, ptr getelementptr inbounds (%Variable, ptr @b, i32 0, i32 1), align 8
  %8 = call ptr @malloc(i32 12)
  %9 = bitcast ptr %8 to ptr
  store i8 1, ptr %9, align 1
  %10 = getelementptr %Value.Int, ptr %8, i32 0, i32 1
  store i64 1, ptr %10, align 4
  %11 = getelementptr %Value.Int, ptr %7, i32 0, i32 1
  %12 = load i64, ptr %11, align 4
  %13 = getelementptr %Value.Int, ptr %8, i32 0, i32 1
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %12, %14
  %16 = call ptr @malloc(i32 12)
  %17 = bitcast ptr %16 to ptr
  store i8 1, ptr %17, align 1
  %18 = getelementptr %Value.Int, ptr %16, i32 0, i32 1
  store i1 %15, ptr %18, align 1
  %19 = getelementptr %Value.Int, ptr %16, i32 0, i32 1
  %20 = load i64, ptr %19, align 4
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %if, label %else_if

if:                                               ; preds = %entry
  %22 = call ptr @malloc(i32 20)
  store [20 x i8] c"a is an integer: %u\00", ptr %22, align 1
  %23 = alloca %Value.String, align 8
  %24 = bitcast ptr %23 to ptr
  store i8 3, ptr %24, align 1
  %25 = getelementptr %Value.String, ptr %23, i32 0, i32 1
  store ptr %22, ptr %25, align 8
  %26 = load ptr, ptr getelementptr inbounds (%Variable, ptr @a, i32 0, i32 1), align 8
  %27 = getelementptr %Value.String, ptr %23, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr %Value.String, ptr %26, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = call i32 (ptr, ...) @printf(ptr %28, ptr %30)
  %32 = alloca %Value.Unknown, align 8
  %33 = bitcast ptr %32 to ptr
  store i8 5, ptr %33, align 1
  %34 = getelementptr %Value.Unknown, ptr %32, i32 0, i32 1
  store i32 %31, ptr %34, align 4
  br label %end_if

else_if:                                          ; preds = %entry
  %35 = load ptr, ptr getelementptr inbounds (%Variable, ptr @b, i32 0, i32 1), align 8
  %36 = call ptr @malloc(i32 12)
  %37 = bitcast ptr %36 to ptr
  store i8 1, ptr %37, align 1
  %38 = getelementptr %Value.Int, ptr %36, i32 0, i32 1
  store i64 3, ptr %38, align 4
  %39 = getelementptr %Value.Int, ptr %35, i32 0, i32 1
  %40 = load i64, ptr %39, align 4
  %41 = getelementptr %Value.Int, ptr %36, i32 0, i32 1
  %42 = load i64, ptr %41, align 4
  %43 = icmp eq i64 %40, %42
  %44 = call ptr @malloc(i32 12)
  %45 = bitcast ptr %44 to ptr
  store i8 1, ptr %45, align 1
  %46 = getelementptr %Value.Int, ptr %44, i32 0, i32 1
  store i1 %43, ptr %46, align 1
  %47 = getelementptr %Value.Int, ptr %44, i32 0, i32 1
  %48 = load i64, ptr %47, align 4
  %49 = icmp sgt i64 %48, 0
  br i1 %49, label %if1, label %else3

end_if:                                           ; preds = %if1, %else3, %if
  %50 = call ptr @malloc(i32 6)
  store [6 x i8] c"Done.\00", ptr %50, align 1
  %51 = call ptr @malloc(i32 16)
  %52 = bitcast ptr %51 to ptr
  store i8 3, ptr %52, align 1
  %53 = getelementptr %Value.String, ptr %51, i32 0, i32 1
  store ptr %50, ptr %53, align 8
  %54 = getelementptr %Value.String, ptr %51, i32 0, i32 1
  %55 = load ptr, ptr %54, align 8
  %56 = call i32 (ptr, ...) @printf(ptr %55)
  %57 = call ptr @malloc(i32 16)
  %58 = bitcast ptr %57 to ptr
  store i8 5, ptr %58, align 1
  %59 = getelementptr %Value.Unknown, ptr %57, i32 0, i32 1
  store i32 %56, ptr %59, align 4
  ret void

if1:                                              ; preds = %else_if
  %60 = call ptr @malloc(i32 18)
  store [18 x i8] c"a is a string: %s\00", ptr %60, align 1
  %61 = alloca %Value.String, align 8
  %62 = bitcast ptr %61 to ptr
  store i8 3, ptr %62, align 1
  %63 = getelementptr %Value.String, ptr %61, i32 0, i32 1
  store ptr %60, ptr %63, align 8
  %64 = load ptr, ptr getelementptr inbounds (%Variable, ptr @a, i32 0, i32 1), align 8
  %65 = getelementptr %Value.String, ptr %61, i32 0, i32 1
  %66 = load ptr, ptr %65, align 8
  %67 = getelementptr %Value.String, ptr %64, i32 0, i32 1
  %68 = load ptr, ptr %67, align 8
  %69 = call i32 (ptr, ...) @printf(ptr %66, ptr %68)
  %70 = alloca %Value.Unknown, align 8
  %71 = bitcast ptr %70 to ptr
  store i8 5, ptr %71, align 1
  %72 = getelementptr %Value.Unknown, ptr %70, i32 0, i32 1
  store i32 %69, ptr %72, align 4
  br label %end_if

else3:                                            ; preds = %else_if
  %73 = call ptr @malloc(i32 24)
  store [24 x i8] c"a is something else: %s\00", ptr %73, align 1
  %74 = alloca %Value.String, align 8
  %75 = bitcast ptr %74 to ptr
  store i8 3, ptr %75, align 1
  %76 = getelementptr %Value.String, ptr %74, i32 0, i32 1
  store ptr %73, ptr %76, align 8
  %77 = load ptr, ptr getelementptr inbounds (%Variable, ptr @a, i32 0, i32 1), align 8
  %78 = getelementptr %Value.String, ptr %74, i32 0, i32 1
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr %Value.String, ptr %77, i32 0, i32 1
  %81 = load ptr, ptr %80, align 8
  %82 = call i32 (ptr, ...) @printf(ptr %79, ptr %81)
  %83 = alloca %Value.Unknown, align 8
  %84 = bitcast ptr %83 to ptr
  store i8 5, ptr %84, align 1
  %85 = getelementptr %Value.Unknown, ptr %83, i32 0, i32 1
  store i32 %82, ptr %85, align 4
  br label %end_if
}

define internal ptr @type(ptr %0) {
prologue:
  %1 = bitcast ptr %0 to ptr
  %2 = load i8, ptr %1, align 1
  %3 = call ptr @malloc(i32 12)
  %4 = bitcast ptr %3 to ptr
  store i8 1, ptr %4, align 1
  %5 = getelementptr %Value.Int, ptr %3, i32 0, i32 1
  store i8 %2, ptr %5, align 1
  ret ptr %3
}
