# Adapted from https://www.geeksforgeeks.org/python-program-for-quicksort/

def partition(array, low, high):

    pivot = array[high]

    i = low - 1

    for j in range(low, high):
        if array[j] <= pivot:

            i = i + 1

            temp = array[i]
            array[i] = array[j]
            array[j] = temp


    temp = array[i + 1]
    array[i + 1] = array[high]
    array[high] = temp

    return i + 1

def quickSort(array, low, high):

    if low < high:

        pi = partition(array, low, high)

        quickSort(array, low, pi - 1)
        quickSort(array, pi + 1, high)

def foo():

    data = [1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2, 1, 7, 4, 1, 10, 9, -2]

    size = len(data)

    quickSort(data, 0, size - 1)

for _ in range(0, 1000):
    foo()
